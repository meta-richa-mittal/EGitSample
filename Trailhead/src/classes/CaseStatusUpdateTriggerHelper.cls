public with sharing class CaseStatusUpdateTriggerHelper {
    
    public static List<FeedComment> feedCommentNewList = new List<FeedComment>();
    
    public static List<FeedComment> feedCommentOldList = new List<FeedComment>();
    
    public static Map<Id, FeedComment> feedCommentNewMap = new Map<Id, FeedComment>();
    
    public static Map<Id, FeedComment> feedCommentOldMap = new Map<Id, FeedComment>();

    public static void updateStatusonFeedComment() {
        Set<Id> caseIdSet = new Set<Id>();
        
        for(FeedComment feedComment: feedCommentNewList) {
            if(String.valueOf(feedComment.ParentId).startsWith('500')) {
                caseIdSet.add(feedComment.ParentId);
            }
            
            //System.debug('feedItemId value = '+feedComment.FeedItemId);
            //System.debug('caseId value = '+feedComment.ParentId);
        }
        
        List<FeedItem> feedItemsMap = Database.query('Select FeedItem.Body, FeedItem.ParentId from FeedItem where ParentId IN :caseIdSet');
        Map<Id, Case> caseMap = new Map<Id, Case>([Select Case.CaseStatus__c from Case where Id IN :caseIdSet]);
        for(Id caseId: caseIdSet) {
            
            for(FeedItem obj: feedItemsMap) {
                if(caseId == String.valueOf(obj.get('ParentId'))) {
                    
                    if((String.valueOf(obj.get('Body')) != null ? String.valueOf(obj.get('Body')) : '').contains('This feed item is generated by email') && caseMap.get(caseId).CaseStatus__c == 'Closed') {
                       
                       //System.debug('Inside if');
                       caseMap.get(caseId).CaseStatus__c = 'Reopen';
                       break;
                    }
                }
               //System.debug('object feed item:' + obj);
            }
        }
        update caseMap.values();
        
        
        
    }
}